"""
10844 easy stair number

    0
1 - 1
    2
    3
    4
    5
    6
    7
    8
    9 - 9

    01
2 - 10 12
    21 23
    32 34
    43 45
    54 56
    65 67
    76 78
    87 89
    98 - 17

    010 012
3 - 101 121 123
    210 212 232 234
    321 323 343 345
    432 434 454 456
    543 545 565 567
    654 656 676 678
    765 767 787 789
    876 878 898
    987 989 - 32

    0101 0121 0123
4 - 1010 1012 1210 1212 1232 1234
    2101 2121 2123 2321 2323 2343 2345

dp[1] = 9
dp[2] = 17 = 9*2 - (2-1)
dp[3] = 33 = 17*2 - (3-1)
dp[n] = dp[n-1]*2 - (n-1)

dp n*9
dp[0][:] = 1
dp[1][0] = dp[0][1]
dp[1][1] = dp[0][0] + dp[0][2]
dp[1][2] = dp[0][1] + dp[0][3]
...
dp[n]
"""

import sys
read = sys.stdin.readline

n = int(read())

dp = [[0]*10 for _ in range(n)]
for i in range(10):
    dp[0][i] = 1
for i in range(1, n):
    for j in range(10):
        if j == 0:
            dp[i][j] = dp[i-1][j+1]
        elif j == 9:
            dp[i][j] = dp[i-1][j-1]
        else:
            dp[i][j] = dp[i-1][j-1] + dp[i-1][j+1]
print(sum(dp[-1][1:]) % 1000000000)
